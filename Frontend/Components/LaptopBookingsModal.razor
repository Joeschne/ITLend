@using Shared.DTOs

@if (IsVisible && Laptop != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Laptop Details</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Laptop Details -->
                    <div class="mb-3">
                        <strong>Model:</strong> @Laptop.Model
                    </div>
                    <div class="mb-3">
                        <strong>Identification Number:</strong> @Laptop.IdentificationNumber
                    </div>

                    <!-- Booking History -->
                    <h6>Booking History:</h6>
                    @if (Bookings == null)
                    {
                        <div>Loading booking history...</div>
                    }
                    else if (!Bookings.Any())
                    {
                        <div>No bookings found for this laptop.</div>
                    }
                    else
                    {
                        <ul class="list-group">
                            @foreach (var booking in Bookings)
                            {
                                <li class="list-group-item">
                                    <strong>Date:</strong> @booking.BookingDateTime.ToString("g")<br />
                                    <strong>Booked By:</strong> @booking.StudentUsername
                                </li>
                            }
                        </ul>
                    }
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    /// <summary>
    /// Indicates whether the modal is visible.
    /// </summary>
    [Parameter]
    public bool IsVisible { get; set; }

    /// <summary>
    /// The laptop whose details are being displayed.
    /// </summary>
    [Parameter]
    public LaptopDTO? Laptop { get; set; }

    /// <summary>
    /// The list of bookings associated with the laptop.
    /// </summary>
    [Parameter]
    public List<BookingResponseDTO>? Bookings { get; set; }

    /// <summary>
    /// Event callback triggered when the modal is closed.
    /// </summary>
    [Parameter]
    public EventCallback OnClose { get; set; }

    /// <summary>
    /// Closes the modal by invoking the <see cref="OnClose"/> callback.
    /// </summary>
    private void CloseModal()
    {
        if (OnClose.HasDelegate)
        {
            OnClose.InvokeAsync();
        }
    }
}
