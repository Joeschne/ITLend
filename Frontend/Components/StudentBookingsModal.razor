@using Shared.DTOs

<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);" @if="!IsVisible">hidden</div>
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">@Username's Bookings</h5>
            <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <p>Total Bookings: @Bookings?.Count ?? 0</p>

            @if (Bookings == null || !Bookings.Any())
            {
                <div class="alert alert-info">
                    No bookings found for this student.
                </div>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var booking in Bookings)
                    {
                        <li class="list-group-item">
                            <div>
                                <strong>Booking Date:</strong> @booking.BookingDateTime.ToString("g")
                            </div>
                            <div>
                                <strong>Laptop:</strong> @booking.Laptop?.IdentificationNumber ?? "Unknown"
                            </div>
                            @if (!string.IsNullOrEmpty(booking.Comment))
                            {
                                <div>
                                    <strong>Comment:</strong> @booking.Comment
                                </div>
                            }
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="modal-footer">
            <button class="btn btn-secondary" @onclick="CloseModal">Close</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public string Username { get; set; }

    [Parameter]
    public List<BookingResponseDTO> Bookings { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private void CloseModal()
    {
        if (OnClose.HasDelegate)
        {
            OnClose.InvokeAsync();
        }
    }
}
